# TINI SECURITY AUDIT & UPDATE SCRIPT
# Ph√¢n t√≠ch nguy c∆° v√† c·∫≠p nh·∫≠t b·∫£o m·∫≠t cho t·∫•t c·∫£ servers

Write-Host "=========================================" -ForegroundColor Red
Write-Host "  TINI SECURITY AUDIT & RISK ANALYSIS" -ForegroundColor Red
Write-Host "=========================================" -ForegroundColor Red
Write-Host ""

# 1. Ki·ªÉm tra Environment Variables
Write-Host "üîê KI·ªÇM TRA ENVIRONMENT VARIABLES:" -ForegroundColor Yellow
$envVars = @("ADMIN_PASSWORD", "BOSS_PASSWORD", "STAFF_PASSWORD", "JWT_SECRET", "DB_ENCRYPTION_KEY")
foreach($env in $envVars) {
    $value = [Environment]::GetEnvironmentVariable($env)
    if($value) {
        Write-Host "‚úÖ $env - ƒê√£ thi·∫øt l·∫≠p" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $env - CH∆ØA THI·∫æT L·∫¨P (NGUY C∆† CAO)" -ForegroundColor Red
    }
}

Write-Host ""

# 2. Ki·ªÉm tra Ports m·ªü
Write-Host "üåê KI·ªÇM TRA PORTS M·ªû (ATTACK SURFACE):" -ForegroundColor Yellow
$openPorts = netstat -an | findstr "LISTENING" | findstr ":80\|:30\|:50\|:55"
if($openPorts) {
    Write-Host "‚ö†Ô∏è PORTS ƒêANG M·ªû:" -ForegroundColor Red
    $openPorts | ForEach-Object { Write-Host "   $_" -ForegroundColor White }
    Write-Host "   NGUY C∆†: Attack surface r·ªông" -ForegroundColor Red
} else {
    Write-Host "‚úÖ Kh√¥ng c√≥ ports ƒë√°ng ng·ªù" -ForegroundColor Green
}

Write-Host ""

# 3. Ki·ªÉm tra Database Files
Write-Host "üóÑÔ∏è KI·ªÇM TRA DATABASE SECURITY:" -ForegroundColor Yellow
$dbFiles = Get-ChildItem -Path . -Name "*.db" -Recurse
if($dbFiles) {
    Write-Host "üìÇ Database files t√¨m th·∫•y:" -ForegroundColor White
    foreach($db in $dbFiles) {
        Write-Host "   $db" -ForegroundColor Gray
        # Ki·ªÉm tra permissions
        $acl = Get-Acl $db
        Write-Host "   Permissions: $($acl.Access.Count) entries" -ForegroundColor Gray
    }
} else {
    Write-Host "‚ÑπÔ∏è Kh√¥ng t√¨m th·∫•y .db files" -ForegroundColor Gray
}

Write-Host ""

# 4. Ki·ªÉm tra Log Files
Write-Host "üìã KI·ªÇM TRA LOG FILES:" -ForegroundColor Yellow
$logFiles = Get-ChildItem -Path . -Name "*.log" -Recurse
if($logFiles) {
    Write-Host "üìù Log files:" -ForegroundColor White
    foreach($log in $logFiles) {
        $size = (Get-Item $log).Length / 1KB
        Write-Host "   $log - $($size.ToString('F2')) KB" -ForegroundColor Gray
    }
} else {
    Write-Host "‚ÑπÔ∏è Kh√¥ng t√¨m th·∫•y log files" -ForegroundColor Gray
}

Write-Host ""

# 5. Ki·ªÉm tra Node Processes
Write-Host "‚öôÔ∏è KI·ªÇM TRA NODE PROCESSES:" -ForegroundColor Yellow
$nodeProcesses = Get-Process -Name "node" -ErrorAction SilentlyContinue
if($nodeProcesses) {
    Write-Host "üü¢ Node processes ƒëang ch·∫°y: $($nodeProcesses.Count)" -ForegroundColor Green
    foreach($proc in $nodeProcesses) {
        $memory = [math]::Round($proc.WorkingSet / 1MB, 2)
        Write-Host "   PID: $($proc.Id) - Memory: $memory MB" -ForegroundColor Gray
    }
} else {
    Write-Host "‚ùå Kh√¥ng c√≥ Node processes" -ForegroundColor Red
}

Write-Host ""
Write-Host "=========================================" -ForegroundColor Red
Write-Host "üìä T·ªîNG K·∫æT NGUY C∆† B·∫¢O M·∫¨T" -ForegroundColor White
Write-Host "=========================================" -ForegroundColor Red

# ƒê√°nh gi√° t·ªïng th·ªÉ
$riskScore = 0
Write-Host ""
Write-Host "üî¥ NGUY C∆† CAO:" -ForegroundColor Red
Write-Host "- Multiple ports exposed (6 services)" -ForegroundColor White
Write-Host "- Single host deployment (SPOF)" -ForegroundColor White
Write-Host "- Environment variables c·∫ßn ki·ªÉm tra" -ForegroundColor White

Write-Host ""
Write-Host "üü° NGUY C∆† TRUNG B√åNH:" -ForegroundColor Yellow  
Write-Host "- Database files tr√™n filesystem" -ForegroundColor White
Write-Host "- Log management c·∫ßn c·∫£i thi·ªán" -ForegroundColor White
Write-Host "- Memory usage c·∫ßn monitoring" -ForegroundColor White

Write-Host ""
Write-Host "üü¢ ƒêI·ªÇM M·∫†NH:" -ForegroundColor Green
Write-Host "- BOSS Security System active" -ForegroundColor White
Write-Host "- Multi-factor authentication" -ForegroundColor White
Write-Host "- Role-based access control" -ForegroundColor White
Write-Host "- Advanced honeypot system" -ForegroundColor White

Write-Host ""
Write-Host "üîß KHUY·∫æN NGH·ªä C·∫§P THI·∫æT:" -ForegroundColor Cyan
Write-Host "1. Thi·∫øt l·∫≠p environment variables" -ForegroundColor White
Write-Host "2. Implement reverse proxy" -ForegroundColor White
Write-Host "3. Database encryption" -ForegroundColor White
Write-Host "4. Log rotation & monitoring" -ForegroundColor White
Write-Host "5. Resource monitoring alerts" -ForegroundColor White

Write-Host ""
Write-Host "üìã Chi ti·∫øt: SYSTEM-ANALYSIS-REPORT.md" -ForegroundColor Magenta
