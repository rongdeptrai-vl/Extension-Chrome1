// ¬© 2024 TINI COMPANY - CONFIDENTIAL
// Employee: rongdeptrai-vl <rongdz2307@gmail.com>
// Commit: 8035ae4 | Time: 2025-08-11T02:28:42Z
// Watermark: TINI_1754879322_e868a412 | TINI_WATERMARK
// WARNING: Unauthorized distribution is prohibited
const fs = require('fs');
const path = require('path');

// Keys b·ªã thi·∫øu v√† translations
const missingKeys = {
    "security_no_threats": {
        "en": "No security threats detected",
        "vi": "Kh√¥ng ph√°t hi·ªán m·ªëi ƒëe d·ªça b·∫£o m·∫≠t",
        "hi": "‡§ï‡•ã‡§à ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§ñ‡§§‡§∞‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ",
        "ko": "Î≥¥Ïïà ÏúÑÌòëÏù¥ Í∞êÏßÄÎêòÏßÄ ÏïäÏùå",
        "zh": "Êú™Ê£ÄÊµãÂà∞ÂÆâÂÖ®Â®ÅËÉÅ"
    },
    "security_controls_matrix": {
        "en": "Security Controls Matrix",
        "vi": "Ma Tr·∫≠n Ki·ªÉm So√°t B·∫£o M·∫≠t",
        "hi": "‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§®‡§ø‡§Ø‡§Ç‡§§‡•ç‡§∞‡§£ ‡§Æ‡•à‡§ü‡•ç‡§∞‡§ø‡§ï‡•ç‡§∏",
        "ko": "Î≥¥Ïïà Ï†úÏñ¥ Îß§Ìä∏Î¶≠Ïä§",
        "zh": "ÂÆâÂÖ®ÊéßÂà∂Áü©Èòµ"
    },
    "btn_refresh": {
        "en": "Refresh",
        "vi": "L√†m M·ªõi",
        "hi": "‡§∞‡•Ä‡§´‡•ç‡§∞‡•á‡§∂",
        "ko": "ÏÉàÎ°úÍ≥†Ïπ®",
        "zh": "Âà∑Êñ∞"
    }
};

// Danh s√°ch ng√¥n ng·ªØ
const languages = ['en', 'vi', 'hi', 'ko', 'zh'];
const localesPath = path.join(__dirname, '_locales');

console.log('üîß Adding missing security keys to all languages...\n');

languages.forEach(lang => {
    const filePath = path.join(localesPath, lang, 'messages.json');
    
    if (fs.existsSync(filePath)) {
        // ƒê·ªçc t·ªáp hi·ªán t·∫°i
        const currentMessages = JSON.parse(fs.readFileSync(filePath, 'utf8'));
        let addedCount = 0;
        
        // Th√™m c√°c keys thi·∫øu
        Object.keys(missingKeys).forEach(key => {
            if (!currentMessages[key]) {
                currentMessages[key] = {
                    "message": missingKeys[key][lang]
                };
                addedCount++;
                console.log(`‚úÖ ${lang.toUpperCase()}: Added "${key}" = "${missingKeys[key][lang]}"`);
            }
        });
        
        if (addedCount > 0) {
            // S·∫Øp x·∫øp keys theo th·ª© t·ª± abc
            const sortedMessages = {};
            Object.keys(currentMessages).sort().forEach(key => {
                sortedMessages[key] = currentMessages[key];
            });
            
            // Ghi l·∫°i t·ªáp
            const jsonString = JSON.stringify(sortedMessages, null, 2);
            fs.writeFileSync(filePath, jsonString, 'utf8');
            
            console.log(`üìä ${lang.toUpperCase()}: Added ${addedCount} keys, total: ${Object.keys(sortedMessages).length}`);
        } else {
            console.log(`‚ÑπÔ∏è  ${lang.toUpperCase()}: All keys already exist`);
        }
    } else {
        console.log(`‚ùå ${lang.toUpperCase()}: File not found`);
    }
});

console.log('\n‚úÖ Completed adding missing security keys!');
